services:
  redis:
    image: redis:7.2-alpine
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - rinha-net
    # volumes:
    #   - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    # command: [
    #   "redis-server",
    #   "--save", "",
    #   "--appendonly", "no"
    #   ]
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "60MB"

  # redisinsight:
  #   image: redislabs/redisinsight
  #   hostname: redisinsight
  #   ports:
  #   - "5540:5540"
  #   networks:
  #   - rinha-net


  api01: &api
    image: rinha-backend-2025-jvm:latest
    hostname: api01
    networks:
      - rinha-net
    ports:
      - "8081:8081"  
    environment:
      - QUARKUS_HTTP_PORT=8081
      - QUARKUS_REDIS_HOST=redis://redis:6379
    
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "150MB"

  api02:
    <<: *api 
    networks:
      - rinha-net
    hostname: api02
    ports:
      - "8082:8082"
    environment:
      - QUARKUS_HTTP_PORT=8082
      - QUARKUS_REDIS_HOST=redis://redis:6379

 
  nginx:
    image: nginx:latest
    networks:
      - rinha-net
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
     
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

  # db-postgresql:
  #   image: postgres:16.1
  #   environment:
  #     - POSTGRES_DB=rinhadb
  #     - POSTGRES_USER=rinha
  #     - POSTGRES_PASSWORD=rinha123
  #   network_mode: host
  #   hostname: db-postgresql
  #   volumes:
  #     - ./import.sql:/docker-entrypoint-initdb.d/script.sql
  #   command: postgres -c 'max_connections=300' -c 'fsync=off' -c 'synchronous_commit=off' -c 'checkpoint_timeout=1d' -c 'full_page_writes=false'
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.9"
  #         memory: "300MB"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 20
  #     start_period: 10s


networks:
  # payment-processor:
  #   external: true
  rinha-net:
    driver: bridge

# volumes:
#   redis-data: